import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;

// TODO: Auto-generated Javadoc
/**
 * The Class IntegerConvertPart1Test.
 */
@TestMethodOrder(OrderAnnotation.class)
class IntegerConvertInt2BinOrHexTest {

	/** The data to stress test binary conversion to byte */
	private String[] binToByteData = new String[] {
			"0b10000000",
			"0b10000001",
			"0b10000010",
			"0b10000011",
			"0b10000100",
			"0b10000101",
			"0b10000110",
			"0b10000111",
			"0b10001000",
			"0b10001001",
			"0b10001010",
			"0b10001011",
			"0b10001100",
			"0b10001101",
			"0b10001110",
			"0b10001111",
			"0b10010000",
			"0b10010001",
			"0b10010010",
			"0b10010011",
			"0b10010100",
			"0b10010101",
			"0b10010110",
			"0b10010111",
			"0b10011000",
			"0b10011001",
			"0b10011010",
			"0b10011011",
			"0b10011100",
			"0b10011101",
			"0b10011110",
			"0b10011111",
			"0b10100000",
			"0b10100001",
			"0b10100010",
			"0b10100011",
			"0b10100100",
			"0b10100101",
			"0b10100110",
			"0b10100111",
			"0b10101000",
			"0b10101001",
			"0b10101010",
			"0b10101011",
			"0b10101100",
			"0b10101101",
			"0b10101110",
			"0b10101111",
			"0b10110000",
			"0b10110001",
			"0b10110010",
			"0b10110011",
			"0b10110100",
			"0b10110101",
			"0b10110110",
			"0b10110111",
			"0b10111000",
			"0b10111001",
			"0b10111010",
			"0b10111011",
			"0b10111100",
			"0b10111101",
			"0b10111110",
			"0b10111111",
			"0b11000000",
			"0b11000001",
			"0b11000010",
			"0b11000011",
			"0b11000100",
			"0b11000101",
			"0b11000110",
			"0b11000111",
			"0b11001000",
			"0b11001001",
			"0b11001010",
			"0b11001011",
			"0b11001100",
			"0b11001101",
			"0b11001110",
			"0b11001111",
			"0b11010000",
			"0b11010001",
			"0b11010010",
			"0b11010011",
			"0b11010100",
			"0b11010101",
			"0b11010110",
			"0b11010111",
			"0b11011000",
			"0b11011001",
			"0b11011010",
			"0b11011011",
			"0b11011100",
			"0b11011101",
			"0b11011110",
			"0b11011111",
			"0b11100000",
			"0b11100001",
			"0b11100010",
			"0b11100011",
			"0b11100100",
			"0b11100101",
			"0b11100110",
			"0b11100111",
			"0b11101000",
			"0b11101001",
			"0b11101010",
			"0b11101011",
			"0b11101100",
			"0b11101101",
			"0b11101110",
			"0b11101111",
			"0b11110000",
			"0b11110001",
			"0b11110010",
			"0b11110011",
			"0b11110100",
			"0b11110101",
			"0b11110110",
			"0b11110111",
			"0b11111000",
			"0b11111001",
			"0b11111010",
			"0b11111011",
			"0b11111100",
			"0b11111101",
			"0b11111110",
			"0b11111111",
			"0b00000000",
			"0b00000001",
			"0b00000010",
			"0b00000011",
			"0b00000100",
			"0b00000101",
			"0b00000110",
			"0b00000111",
			"0b00001000",
			"0b00001001",
			"0b00001010",
			"0b00001011",
			"0b00001100",
			"0b00001101",
			"0b00001110",
			"0b00001111",
			"0b00010000",
			"0b00010001",
			"0b00010010",
			"0b00010011",
			"0b00010100",
			"0b00010101",
			"0b00010110",
			"0b00010111",
			"0b00011000",
			"0b00011001",
			"0b00011010",
			"0b00011011",
			"0b00011100",
			"0b00011101",
			"0b00011110",
			"0b00011111",
			"0b00100000",
			"0b00100001",
			"0b00100010",
			"0b00100011",
			"0b00100100",
			"0b00100101",
			"0b00100110",
			"0b00100111",
			"0b00101000",
			"0b00101001",
			"0b00101010",
			"0b00101011",
			"0b00101100",
			"0b00101101",
			"0b00101110",
			"0b00101111",
			"0b00110000",
			"0b00110001",
			"0b00110010",
			"0b00110011",
			"0b00110100",
			"0b00110101",
			"0b00110110",
			"0b00110111",
			"0b00111000",
			"0b00111001",
			"0b00111010",
			"0b00111011",
			"0b00111100",
			"0b00111101",
			"0b00111110",
			"0b00111111",
			"0b01000000",
			"0b01000001",
			"0b01000010",
			"0b01000011",
			"0b01000100",
			"0b01000101",
			"0b01000110",
			"0b01000111",
			"0b01001000",
			"0b01001001",
			"0b01001010",
			"0b01001011",
			"0b01001100",
			"0b01001101",
			"0b01001110",
			"0b01001111",
			"0b01010000",
			"0b01010001",
			"0b01010010",
			"0b01010011",
			"0b01010100",
			"0b01010101",
			"0b01010110",
			"0b01010111",
			"0b01011000",
			"0b01011001",
			"0b01011010",
			"0b01011011",
			"0b01011100",
			"0b01011101",
			"0b01011110",
			"0b01011111",
			"0b01100000",
			"0b01100001",
			"0b01100010",
			"0b01100011",
			"0b01100100",
			"0b01100101",
			"0b01100110",
			"0b01100111",
			"0b01101000",
			"0b01101001",
			"0b01101010",
			"0b01101011",
			"0b01101100",
			"0b01101101",
			"0b01101110",
			"0b01101111",
			"0b01110000",
			"0b01110001",
			"0b01110010",
			"0b01110011",
			"0b01110100",
			"0b01110101",
			"0b01110110",
			"0b01110111",
			"0b01111000",
			"0b01111001",
			"0b01111010",
			"0b01111011",
			"0b01111100",
			"0b01111101",
			"0b01111110",
			"0b01111111"			
	};
	
	/** data test stress test hex string conversion to byte. */
	private String[] hexToByteData = new String[] {
			"0x80",
			"0x81",
			"0x82",
			"0x83",
			"0x84",
			"0x85",
			"0x86",
			"0x87",
			"0x88",
			"0x89",
			"0x8a",
			"0x8b",
			"0x8c",
			"0x8d",
			"0x8e",
			"0x8f",
			"0x90",
			"0x91",
			"0x92",
			"0x93",
			"0x94",
			"0x95",
			"0x96",
			"0x97",
			"0x98",
			"0x99",
			"0x9a",
			"0x9b",
			"0x9c",
			"0x9d",
			"0x9e",
			"0x9f",
			"0xa0",
			"0xa1",
			"0xa2",
			"0xa3",
			"0xa4",
			"0xa5",
			"0xa6",
			"0xa7",
			"0xa8",
			"0xa9",
			"0xaa",
			"0xab",
			"0xac",
			"0xad",
			"0xae",
			"0xaf",
			"0xb0",
			"0xb1",
			"0xb2",
			"0xb3",
			"0xb4",
			"0xb5",
			"0xb6",
			"0xb7",
			"0xb8",
			"0xb9",
			"0xba",
			"0xbb",
			"0xbc",
			"0xbd",
			"0xbe",
			"0xbf",
			"0xc0",
			"0xc1",
			"0xc2",
			"0xc3",
			"0xc4",
			"0xc5",
			"0xc6",
			"0xc7",
			"0xc8",
			"0xc9",
			"0xca",
			"0xcb",
			"0xcc",
			"0xcd",
			"0xce",
			"0xcf",
			"0xd0",
			"0xd1",
			"0xd2",
			"0xd3",
			"0xd4",
			"0xd5",
			"0xd6",
			"0xd7",
			"0xd8",
			"0xd9",
			"0xda",
			"0xdb",
			"0xdc",
			"0xdd",
			"0xde",
			"0xdf",
			"0xe0",
			"0xe1",
			"0xe2",
			"0xe3",
			"0xe4",
			"0xe5",
			"0xe6",
			"0xe7",
			"0xe8",
			"0xe9",
			"0xea",
			"0xeb",
			"0xec",
			"0xed",
			"0xee",
			"0xef",
			"0xf0",
			"0xf1",
			"0xf2",
			"0xf3",
			"0xf4",
			"0xf5",
			"0xf6",
			"0xf7",
			"0xf8",
			"0xf9",
			"0xfa",
			"0xfb",
			"0xfc",
			"0xfd",
			"0xfe",
			"0xff",
			"0x00",
			"0x01",
			"0x02",
			"0x03",
			"0x04",
			"0x05",
			"0x06",
			"0x07",
			"0x08",
			"0x09",
			"0x0a",
			"0x0b",
			"0x0c",
			"0x0d",
			"0x0e",
			"0x0f",
			"0x10",
			"0x11",
			"0x12",
			"0x13",
			"0x14",
			"0x15",
			"0x16",
			"0x17",
			"0x18",
			"0x19",
			"0x1a",
			"0x1b",
			"0x1c",
			"0x1d",
			"0x1e",
			"0x1f",
			"0x20",
			"0x21",
			"0x22",
			"0x23",
			"0x24",
			"0x25",
			"0x26",
			"0x27",
			"0x28",
			"0x29",
			"0x2a",
			"0x2b",
			"0x2c",
			"0x2d",
			"0x2e",
			"0x2f",
			"0x30",
			"0x31",
			"0x32",
			"0x33",
			"0x34",
			"0x35",
			"0x36",
			"0x37",
			"0x38",
			"0x39",
			"0x3a",
			"0x3b",
			"0x3c",
			"0x3d",
			"0x3e",
			"0x3f",
			"0x40",
			"0x41",
			"0x42",
			"0x43",
			"0x44",
			"0x45",
			"0x46",
			"0x47",
			"0x48",
			"0x49",
			"0x4a",
			"0x4b",
			"0x4c",
			"0x4d",
			"0x4e",
			"0x4f",
			"0x50",
			"0x51",
			"0x52",
			"0x53",
			"0x54",
			"0x55",
			"0x56",
			"0x57",
			"0x58",
			"0x59",
			"0x5a",
			"0x5b",
			"0x5c",
			"0x5d",
			"0x5e",
			"0x5f",
			"0x60",
			"0x61",
			"0x62",
			"0x63",
			"0x64",
			"0x65",
			"0x66",
			"0x67",
			"0x68",
			"0x69",
			"0x6a",
			"0x6b",
			"0x6c",
			"0x6d",
			"0x6e",
			"0x6f",
			"0x70",
			"0x71",
			"0x72",
			"0x73",
			"0x74",
			"0x75",
			"0x76",
			"0x77",
			"0x78",
			"0x79",
			"0x7a",
			"0x7b",
			"0x7c",
			"0x7d",
			"0x7e",
			"0x7f"
	};
	
	/** The data to stress test binary string conversion to integer */
	private String[] binToIntData = new String[] {
			"0b00000011000000100000000100000000",
			"0b00000000000000010000001000000011",
			"0b00000100000000110000001000000001",
			"0b00000001000000100000001100000100",
			"0b00000101000001000000001100000010",
			"0b00000010000000110000010000000101",
			"0b00000110000001010000010000000011",
			"0b00000011000001000000010100000110",
			"0b00000111000001100000010100000100",
			"0b00000100000001010000011000000111",
			"0b00001000000001110000011000000101",
			"0b00000101000001100000011100001000",
			"0b00001001000010000000011100000110",
			"0b00000110000001110000100000001001",
			"0b00001010000010010000100000000111",
			"0b00000111000010000000100100001010",
			"0b00001011000010100000100100001000",
			"0b00001000000010010000101000001011",
			"0b00001100000010110000101000001001",
			"0b00001001000010100000101100001100",
			"0b00001101000011000000101100001010",
			"0b00001010000010110000110000001101",
			"0b00001110000011010000110000001011",
			"0b00001011000011000000110100001110",
			"0b00001111000011100000110100001100",
			"0b00001100000011010000111000001111",
			"0b00010000000011110000111000001101",
			"0b00001101000011100000111100010000",
			"0b00010001000100000000111100001110",
			"0b00001110000011110001000000010001",
			"0b00010010000100010001000000001111",
			"0b00001111000100000001000100010010",
			"0b00010011000100100001000100010000",
			"0b00010000000100010001001000010011",
			"0b00010100000100110001001000010001",
			"0b00010001000100100001001100010100",
			"0b00010101000101000001001100010010",
			"0b00010010000100110001010000010101",
			"0b00010110000101010001010000010011",
			"0b00010011000101000001010100010110",
			"0b00010111000101100001010100010100",
			"0b00010100000101010001011000010111",
			"0b00011000000101110001011000010101",
			"0b00010101000101100001011100011000",
			"0b00011001000110000001011100010110",
			"0b00010110000101110001100000011001",
			"0b00011010000110010001100000010111",
			"0b00010111000110000001100100011010",
			"0b00011011000110100001100100011000",
			"0b00011000000110010001101000011011",
			"0b00011100000110110001101000011001",
			"0b00011001000110100001101100011100",
			"0b00011101000111000001101100011010",
			"0b00011010000110110001110000011101",
			"0b00011110000111010001110000011011",
			"0b00011011000111000001110100011110",
			"0b00011111000111100001110100011100",
			"0b00011100000111010001111000011111",
			"0b00100000000111110001111000011101",
			"0b00011101000111100001111100100000",
			"0b00100001001000000001111100011110",
			"0b00011110000111110010000000100001",
			"0b00100010001000010010000000011111",
			"0b00011111001000000010000100100010",
			"0b00100011001000100010000100100000",
			"0b00100000001000010010001000100011",
			"0b00100100001000110010001000100001",
			"0b00100001001000100010001100100100",
			"0b00100101001001000010001100100010",
			"0b00100010001000110010010000100101",
			"0b00100110001001010010010000100011",
			"0b00100011001001000010010100100110",
			"0b00100111001001100010010100100100",
			"0b00100100001001010010011000100111",
			"0b00101000001001110010011000100101",
			"0b00100101001001100010011100101000",
			"0b00101001001010000010011100100110",
			"0b00100110001001110010100000101001",
			"0b00101010001010010010100000100111",
			"0b00100111001010000010100100101010",
			"0b00101011001010100010100100101000",
			"0b00101000001010010010101000101011",
			"0b00101100001010110010101000101001",
			"0b00101001001010100010101100101100",
			"0b00101101001011000010101100101010",
			"0b00101010001010110010110000101101",
			"0b00101110001011010010110000101011",
			"0b00101011001011000010110100101110",
			"0b00101111001011100010110100101100",
			"0b00101100001011010010111000101111",
			"0b00110000001011110010111000101101",
			"0b00101101001011100010111100110000",
			"0b00110001001100000010111100101110",
			"0b00101110001011110011000000110001",
			"0b00110010001100010011000000101111",
			"0b00101111001100000011000100110010",
			"0b00110011001100100011000100110000",
			"0b00110000001100010011001000110011",
			"0b00110100001100110011001000110001",
			"0b00110001001100100011001100110100",
			"0b00110101001101000011001100110010",
			"0b00110010001100110011010000110101",
			"0b00110110001101010011010000110011",
			"0b00110011001101000011010100110110",
			"0b00110111001101100011010100110100",
			"0b00110100001101010011011000110111",
			"0b00111000001101110011011000110101",
			"0b00110101001101100011011100111000",
			"0b00111001001110000011011100110110",
			"0b00110110001101110011100000111001",
			"0b00111010001110010011100000110111",
			"0b00110111001110000011100100111010",
			"0b00111011001110100011100100111000",
			"0b00111000001110010011101000111011",
			"0b00111100001110110011101000111001",
			"0b00111001001110100011101100111100",
			"0b00111101001111000011101100111010",
			"0b00111010001110110011110000111101",
			"0b00111110001111010011110000111011",
			"0b00111011001111000011110100111110",
			"0b00111111001111100011110100111100",
			"0b00111100001111010011111000111111",
			"0b01000000001111110011111000111101",
			"0b00111101001111100011111101000000",
			"0b01000001010000000011111100111110",
			"0b00111110001111110100000001000001",
			"0b01000010010000010100000000111111",
			"0b00111111010000000100000101000010",
			"0b01000011010000100100000101000000",
			"0b01000000010000010100001001000011",
			"0b01000100010000110100001001000001",
			"0b01000001010000100100001101000100",
			"0b01000101010001000100001101000010",
			"0b01000010010000110100010001000101",
			"0b01000110010001010100010001000011",
			"0b01000011010001000100010101000110",
			"0b01000111010001100100010101000100",
			"0b01000100010001010100011001000111",
			"0b01001000010001110100011001000101",
			"0b01000101010001100100011101001000",
			"0b01001001010010000100011101000110",
			"0b01000110010001110100100001001001",
			"0b01001010010010010100100001000111",
			"0b01000111010010000100100101001010",
			"0b01001011010010100100100101001000",
			"0b01001000010010010100101001001011",
			"0b01001100010010110100101001001001",
			"0b01001001010010100100101101001100",
			"0b01001101010011000100101101001010",
			"0b01001010010010110100110001001101",
			"0b01001110010011010100110001001011",
			"0b01001011010011000100110101001110",
			"0b01001111010011100100110101001100",
			"0b01001100010011010100111001001111",
			"0b01010000010011110100111001001101",
			"0b01001101010011100100111101010000",
			"0b01010001010100000100111101001110",
			"0b01001110010011110101000001010001",
			"0b01010010010100010101000001001111",
			"0b01001111010100000101000101010010",
			"0b01010011010100100101000101010000",
			"0b01010000010100010101001001010011",
			"0b01010100010100110101001001010001",
			"0b01010001010100100101001101010100",
			"0b01010101010101000101001101010010",
			"0b01010010010100110101010001010101",
			"0b01010110010101010101010001010011",
			"0b01010011010101000101010101010110",
			"0b01010111010101100101010101010100",
			"0b01010100010101010101011001010111",
			"0b01011000010101110101011001010101",
			"0b01010101010101100101011101011000",
			"0b01011001010110000101011101010110",
			"0b01010110010101110101100001011001",
			"0b01011010010110010101100001010111",
			"0b01010111010110000101100101011010",
			"0b01011011010110100101100101011000",
			"0b01011000010110010101101001011011",
			"0b01011100010110110101101001011001",
			"0b01011001010110100101101101011100",
			"0b01011101010111000101101101011010",
			"0b01011010010110110101110001011101",
			"0b01011110010111010101110001011011",
			"0b01011011010111000101110101011110",
			"0b01011111010111100101110101011100",
			"0b01011100010111010101111001011111",
			"0b01100000010111110101111001011101",
			"0b01011101010111100101111101100000",
			"0b01100001011000000101111101011110",
			"0b01011110010111110110000001100001",
			"0b01100010011000010110000001011111",
			"0b01011111011000000110000101100010",
			"0b01100011011000100110000101100000",
			"0b01100000011000010110001001100011",
			"0b01100100011000110110001001100001",
			"0b01100001011000100110001101100100",
			"0b01100101011001000110001101100010",
			"0b01100010011000110110010001100101",
			"0b01100110011001010110010001100011",
			"0b01100011011001000110010101100110",
			"0b01100111011001100110010101100100",
			"0b01100100011001010110011001100111",
			"0b01101000011001110110011001100101",
			"0b01100101011001100110011101101000",
			"0b01101001011010000110011101100110",
			"0b01100110011001110110100001101001",
			"0b01101010011010010110100001100111",
			"0b01100111011010000110100101101010",
			"0b01101011011010100110100101101000",
			"0b01101000011010010110101001101011",
			"0b01101100011010110110101001101001",
			"0b01101001011010100110101101101100",
			"0b01101101011011000110101101101010",
			"0b01101010011010110110110001101101",
			"0b01101110011011010110110001101011",
			"0b01101011011011000110110101101110",
			"0b01101111011011100110110101101100",
			"0b01101100011011010110111001101111",
			"0b01110000011011110110111001101101",
			"0b01101101011011100110111101110000",
			"0b01110001011100000110111101101110",
			"0b01101110011011110111000001110001",
			"0b01110010011100010111000001101111",
			"0b01101111011100000111000101110010",
			"0b01110011011100100111000101110000",
			"0b01110000011100010111001001110011",
			"0b01110100011100110111001001110001",
			"0b01110001011100100111001101110100",
			"0b01110101011101000111001101110010",
			"0b01110010011100110111010001110101",
			"0b01110110011101010111010001110011",
			"0b01110011011101000111010101110110",
			"0b01110111011101100111010101110100",
			"0b01110100011101010111011001110111",
			"0b01111000011101110111011001110101",
			"0b01110101011101100111011101111000",
			"0b01111001011110000111011101110110",
			"0b01110110011101110111100001111001",
			"0b01111010011110010111100001110111",
			"0b01110111011110000111100101111010",
			"0b01111011011110100111100101111000",
			"0b01111000011110010111101001111011",
			"0b01111100011110110111101001111001",
			"0b01111001011110100111101101111100",
			"0b01111101011111000111101101111010",
			"0b01111010011110110111110001111101",
			"0b01111110011111010111110001111011",
			"0b01111011011111000111110101111110",
			"0b01111111011111100111110101111100",
			"0b01111100011111010111111001111111",
			"0b10000000011111110111111001111101",
			"0b01111101011111100111111110000000",
			"0b10000001100000000111111101111110",
			"0b01111110011111111000000010000001",
			"0b10000010100000011000000001111111",
			"0b01111111100000001000000110000010",
			"0b10000011100000101000000110000000",
			"0b10000000100000011000001010000011",
			"0b10000100100000111000001010000001",
			"0b10000001100000101000001110000100",
			"0b10000101100001001000001110000010",
			"0b10000010100000111000010010000101",
			"0b10000110100001011000010010000011",
			"0b10000011100001001000010110000110",
			"0b10000111100001101000010110000100",
			"0b10000100100001011000011010000111",
			"0b10001000100001111000011010000101",
			"0b10000101100001101000011110001000",
			"0b10001001100010001000011110000110",
			"0b10000110100001111000100010001001",
			"0b10001010100010011000100010000111",
			"0b10000111100010001000100110001010",
			"0b10001011100010101000100110001000",
			"0b10001000100010011000101010001011",
			"0b10001100100010111000101010001001",
			"0b10001001100010101000101110001100",
			"0b10001101100011001000101110001010",
			"0b10001010100010111000110010001101",
			"0b10001110100011011000110010001011",
			"0b10001011100011001000110110001110",
			"0b10001111100011101000110110001100",
			"0b10001100100011011000111010001111",
			"0b10010000100011111000111010001101",
			"0b10001101100011101000111110010000",
			"0b10010001100100001000111110001110",
			"0b10001110100011111001000010010001",
			"0b10010010100100011001000010001111",
			"0b10001111100100001001000110010010",
			"0b10010011100100101001000110010000",
			"0b10010000100100011001001010010011",
			"0b10010100100100111001001010010001",
			"0b10010001100100101001001110010100",
			"0b10010101100101001001001110010010",
			"0b10010010100100111001010010010101",
			"0b10010110100101011001010010010011",
			"0b10010011100101001001010110010110",
			"0b10010111100101101001010110010100",
			"0b10010100100101011001011010010111",
			"0b10011000100101111001011010010101",
			"0b10010101100101101001011110011000",
			"0b10011001100110001001011110010110",
			"0b10010110100101111001100010011001",
			"0b10011010100110011001100010010111",
			"0b10010111100110001001100110011010",
			"0b10011011100110101001100110011000",
			"0b10011000100110011001101010011011",
			"0b10011100100110111001101010011001",
			"0b10011001100110101001101110011100",
			"0b10011101100111001001101110011010",
			"0b10011010100110111001110010011101",
			"0b10011110100111011001110010011011",
			"0b10011011100111001001110110011110",
			"0b10011111100111101001110110011100",
			"0b10011100100111011001111010011111",
			"0b10100000100111111001111010011101",
			"0b10011101100111101001111110100000",
			"0b10100001101000001001111110011110",
			"0b10011110100111111010000010100001",
			"0b10100010101000011010000010011111",
			"0b10011111101000001010000110100010",
			"0b10100011101000101010000110100000",
			"0b10100000101000011010001010100011",
			"0b10100100101000111010001010100001",
			"0b10100001101000101010001110100100",
			"0b10100101101001001010001110100010",
			"0b10100010101000111010010010100101",
			"0b10100110101001011010010010100011",
			"0b10100011101001001010010110100110",
			"0b10100111101001101010010110100100",
			"0b10100100101001011010011010100111",
			"0b10101000101001111010011010100101",
			"0b10100101101001101010011110101000",
			"0b10101001101010001010011110100110",
			"0b10100110101001111010100010101001",
			"0b10101010101010011010100010100111",
			"0b10100111101010001010100110101010",
			"0b10101011101010101010100110101000",
			"0b10101000101010011010101010101011",
			"0b10101100101010111010101010101001",
			"0b10101001101010101010101110101100",
			"0b10101101101011001010101110101010",
			"0b10101010101010111010110010101101",
			"0b10101110101011011010110010101011",
			"0b10101011101011001010110110101110",
			"0b10101111101011101010110110101100",
			"0b10101100101011011010111010101111",
			"0b10110000101011111010111010101101",
			"0b10101101101011101010111110110000",
			"0b10110001101100001010111110101110",
			"0b10101110101011111011000010110001",
			"0b10110010101100011011000010101111",
			"0b10101111101100001011000110110010",
			"0b10110011101100101011000110110000",
			"0b10110000101100011011001010110011",
			"0b10110100101100111011001010110001",
			"0b10110001101100101011001110110100",
			"0b10110101101101001011001110110010",
			"0b10110010101100111011010010110101",
			"0b10110110101101011011010010110011",
			"0b10110011101101001011010110110110",
			"0b10110111101101101011010110110100",
			"0b10110100101101011011011010110111",
			"0b10111000101101111011011010110101",
			"0b10110101101101101011011110111000",
			"0b10111001101110001011011110110110",
			"0b10110110101101111011100010111001",
			"0b10111010101110011011100010110111",
			"0b10110111101110001011100110111010",
			"0b10111011101110101011100110111000",
			"0b10111000101110011011101010111011",
			"0b10111100101110111011101010111001",
			"0b10111001101110101011101110111100",
			"0b10111101101111001011101110111010",
			"0b10111010101110111011110010111101",
			"0b10111110101111011011110010111011",
			"0b10111011101111001011110110111110",
			"0b10111111101111101011110110111100",
			"0b10111100101111011011111010111111",
			"0b11000000101111111011111010111101",
			"0b10111101101111101011111111000000",
			"0b11000001110000001011111110111110",
			"0b10111110101111111100000011000001",
			"0b11000010110000011100000010111111",
			"0b10111111110000001100000111000010",
			"0b11000011110000101100000111000000",
			"0b11000000110000011100001011000011",
			"0b11000100110000111100001011000001",
			"0b11000001110000101100001111000100",
			"0b11000101110001001100001111000010",
			"0b11000010110000111100010011000101",
			"0b11000110110001011100010011000011",
			"0b11000011110001001100010111000110",
			"0b11000111110001101100010111000100",
			"0b11000100110001011100011011000111",
			"0b11001000110001111100011011000101",
			"0b11000101110001101100011111001000",
			"0b11001001110010001100011111000110",
			"0b11000110110001111100100011001001",
			"0b11001010110010011100100011000111",
			"0b11000111110010001100100111001010",
			"0b11001011110010101100100111001000",
			"0b11001000110010011100101011001011",
			"0b11001100110010111100101011001001",
			"0b11001001110010101100101111001100",
			"0b11001101110011001100101111001010",
			"0b11001010110010111100110011001101",
			"0b11001110110011011100110011001011",
			"0b11001011110011001100110111001110",
			"0b11001111110011101100110111001100",
			"0b11001100110011011100111011001111",
			"0b11010000110011111100111011001101",
			"0b11001101110011101100111111010000",
			"0b11010001110100001100111111001110",
			"0b11001110110011111101000011010001",
			"0b11010010110100011101000011001111",
			"0b11001111110100001101000111010010",
			"0b11010011110100101101000111010000",
			"0b11010000110100011101001011010011",
			"0b11010100110100111101001011010001",
			"0b11010001110100101101001111010100",
			"0b11010101110101001101001111010010",
			"0b11010010110100111101010011010101",
			"0b11010110110101011101010011010011",
			"0b11010011110101001101010111010110",
			"0b11010111110101101101010111010100",
			"0b11010100110101011101011011010111",
			"0b11011000110101111101011011010101",
			"0b11010101110101101101011111011000",
			"0b11011001110110001101011111010110",
			"0b11010110110101111101100011011001",
			"0b11011010110110011101100011010111",
			"0b11010111110110001101100111011010",
			"0b11011011110110101101100111011000",
			"0b11011000110110011101101011011011",
			"0b11011100110110111101101011011001",
			"0b11011001110110101101101111011100",
			"0b11011101110111001101101111011010",
			"0b11011010110110111101110011011101",
			"0b11011110110111011101110011011011",
			"0b11011011110111001101110111011110",
			"0b11011111110111101101110111011100",
			"0b11011100110111011101111011011111",
			"0b11100000110111111101111011011101",
			"0b11011101110111101101111111100000",
			"0b11100001111000001101111111011110",
			"0b11011110110111111110000011100001",
			"0b11100010111000011110000011011111",
			"0b11011111111000001110000111100010",
			"0b11100011111000101110000111100000",
			"0b11100000111000011110001011100011",
			"0b11100100111000111110001011100001",
			"0b11100001111000101110001111100100",
			"0b11100101111001001110001111100010",
			"0b11100010111000111110010011100101",
			"0b11100110111001011110010011100011",
			"0b11100011111001001110010111100110",
			"0b11100111111001101110010111100100",
			"0b11100100111001011110011011100111",
			"0b11101000111001111110011011100101",
			"0b11100101111001101110011111101000",
			"0b11101001111010001110011111100110",
			"0b11100110111001111110100011101001",
			"0b11101010111010011110100011100111",
			"0b11100111111010001110100111101010",
			"0b11101011111010101110100111101000",
			"0b11101000111010011110101011101011",
			"0b11101100111010111110101011101001",
			"0b11101001111010101110101111101100",
			"0b11101101111011001110101111101010",
			"0b11101010111010111110110011101101",
			"0b11101110111011011110110011101011",
			"0b11101011111011001110110111101110",
			"0b11101111111011101110110111101100",
			"0b11101100111011011110111011101111",
			"0b11110000111011111110111011101101",
			"0b11101101111011101110111111110000",
			"0b11110001111100001110111111101110",
			"0b11101110111011111111000011110001",
			"0b11110010111100011111000011101111",
			"0b11101111111100001111000111110010",
			"0b11110011111100101111000111110000",
			"0b11110000111100011111001011110011",
			"0b11110100111100111111001011110001",
			"0b11110001111100101111001111110100",
			"0b11110101111101001111001111110010",
			"0b11110010111100111111010011110101",
			"0b11110110111101011111010011110011",
			"0b11110011111101001111010111110110",
			"0b11110111111101101111010111110100",
			"0b11110100111101011111011011110111",
			"0b11111000111101111111011011110101",
			"0b11110101111101101111011111111000",
			"0b11111001111110001111011111110110",
			"0b11110110111101111111100011111001",
			"0b11111010111110011111100011110111",
			"0b11110111111110001111100111111010",
			"0b11111011111110101111100111111000",
			"0b11111000111110011111101011111011",
			"0b11111100111110111111101011111001",
			"0b11111001111110101111101111111100",
			"0b11111101111111001111101111111010",
			"0b11111010111110111111110011111101",
			"0b11111110111111011111110011111011",
			"0b11111011111111001111110111111110",
			"0b11111111111111101111110111111100",
			"0b11111100111111011111111011111111"
	};
	
	/** The data to stress hex string conversion to integer */
	private String[] hexToIntData = new String[] {
			"0x03020100",
			"0x00010203",
			"0x04030201",
			"0x01020304",
			"0x05040302",
			"0x02030405",
			"0x06050403",
			"0x03040506",
			"0x07060504",
			"0x04050607",
			"0x08070605",
			"0x05060708",
			"0x09080706",
			"0x06070809",
			"0x0a090807",
			"0x0708090a",
			"0x0b0a0908",
			"0x08090a0b",
			"0x0c0b0a09",
			"0x090a0b0c",
			"0x0d0c0b0a",
			"0x0a0b0c0d",
			"0x0e0d0c0b",
			"0x0b0c0d0e",
			"0x0f0e0d0c",
			"0x0c0d0e0f",
			"0x100f0e0d",
			"0x0d0e0f10",
			"0x11100f0e",
			"0x0e0f1011",
			"0x1211100f",
			"0x0f101112",
			"0x13121110",
			"0x10111213",
			"0x14131211",
			"0x11121314",
			"0x15141312",
			"0x12131415",
			"0x16151413",
			"0x13141516",
			"0x17161514",
			"0x14151617",
			"0x18171615",
			"0x15161718",
			"0x19181716",
			"0x16171819",
			"0x1a191817",
			"0x1718191a",
			"0x1b1a1918",
			"0x18191a1b",
			"0x1c1b1a19",
			"0x191a1b1c",
			"0x1d1c1b1a",
			"0x1a1b1c1d",
			"0x1e1d1c1b",
			"0x1b1c1d1e",
			"0x1f1e1d1c",
			"0x1c1d1e1f",
			"0x201f1e1d",
			"0x1d1e1f20",
			"0x21201f1e",
			"0x1e1f2021",
			"0x2221201f",
			"0x1f202122",
			"0x23222120",
			"0x20212223",
			"0x24232221",
			"0x21222324",
			"0x25242322",
			"0x22232425",
			"0x26252423",
			"0x23242526",
			"0x27262524",
			"0x24252627",
			"0x28272625",
			"0x25262728",
			"0x29282726",
			"0x26272829",
			"0x2a292827",
			"0x2728292a",
			"0x2b2a2928",
			"0x28292a2b",
			"0x2c2b2a29",
			"0x292a2b2c",
			"0x2d2c2b2a",
			"0x2a2b2c2d",
			"0x2e2d2c2b",
			"0x2b2c2d2e",
			"0x2f2e2d2c",
			"0x2c2d2e2f",
			"0x302f2e2d",
			"0x2d2e2f30",
			"0x31302f2e",
			"0x2e2f3031",
			"0x3231302f",
			"0x2f303132",
			"0x33323130",
			"0x30313233",
			"0x34333231",
			"0x31323334",
			"0x35343332",
			"0x32333435",
			"0x36353433",
			"0x33343536",
			"0x37363534",
			"0x34353637",
			"0x38373635",
			"0x35363738",
			"0x39383736",
			"0x36373839",
			"0x3a393837",
			"0x3738393a",
			"0x3b3a3938",
			"0x38393a3b",
			"0x3c3b3a39",
			"0x393a3b3c",
			"0x3d3c3b3a",
			"0x3a3b3c3d",
			"0x3e3d3c3b",
			"0x3b3c3d3e",
			"0x3f3e3d3c",
			"0x3c3d3e3f",
			"0x403f3e3d",
			"0x3d3e3f40",
			"0x41403f3e",
			"0x3e3f4041",
			"0x4241403f",
			"0x3f404142",
			"0x43424140",
			"0x40414243",
			"0x44434241",
			"0x41424344",
			"0x45444342",
			"0x42434445",
			"0x46454443",
			"0x43444546",
			"0x47464544",
			"0x44454647",
			"0x48474645",
			"0x45464748",
			"0x49484746",
			"0x46474849",
			"0x4a494847",
			"0x4748494a",
			"0x4b4a4948",
			"0x48494a4b",
			"0x4c4b4a49",
			"0x494a4b4c",
			"0x4d4c4b4a",
			"0x4a4b4c4d",
			"0x4e4d4c4b",
			"0x4b4c4d4e",
			"0x4f4e4d4c",
			"0x4c4d4e4f",
			"0x504f4e4d",
			"0x4d4e4f50",
			"0x51504f4e",
			"0x4e4f5051",
			"0x5251504f",
			"0x4f505152",
			"0x53525150",
			"0x50515253",
			"0x54535251",
			"0x51525354",
			"0x55545352",
			"0x52535455",
			"0x56555453",
			"0x53545556",
			"0x57565554",
			"0x54555657",
			"0x58575655",
			"0x55565758",
			"0x59585756",
			"0x56575859",
			"0x5a595857",
			"0x5758595a",
			"0x5b5a5958",
			"0x58595a5b",
			"0x5c5b5a59",
			"0x595a5b5c",
			"0x5d5c5b5a",
			"0x5a5b5c5d",
			"0x5e5d5c5b",
			"0x5b5c5d5e",
			"0x5f5e5d5c",
			"0x5c5d5e5f",
			"0x605f5e5d",
			"0x5d5e5f60",
			"0x61605f5e",
			"0x5e5f6061",
			"0x6261605f",
			"0x5f606162",
			"0x63626160",
			"0x60616263",
			"0x64636261",
			"0x61626364",
			"0x65646362",
			"0x62636465",
			"0x66656463",
			"0x63646566",
			"0x67666564",
			"0x64656667",
			"0x68676665",
			"0x65666768",
			"0x69686766",
			"0x66676869",
			"0x6a696867",
			"0x6768696a",
			"0x6b6a6968",
			"0x68696a6b",
			"0x6c6b6a69",
			"0x696a6b6c",
			"0x6d6c6b6a",
			"0x6a6b6c6d",
			"0x6e6d6c6b",
			"0x6b6c6d6e",
			"0x6f6e6d6c",
			"0x6c6d6e6f",
			"0x706f6e6d",
			"0x6d6e6f70",
			"0x71706f6e",
			"0x6e6f7071",
			"0x7271706f",
			"0x6f707172",
			"0x73727170",
			"0x70717273",
			"0x74737271",
			"0x71727374",
			"0x75747372",
			"0x72737475",
			"0x76757473",
			"0x73747576",
			"0x77767574",
			"0x74757677",
			"0x78777675",
			"0x75767778",
			"0x79787776",
			"0x76777879",
			"0x7a797877",
			"0x7778797a",
			"0x7b7a7978",
			"0x78797a7b",
			"0x7c7b7a79",
			"0x797a7b7c",
			"0x7d7c7b7a",
			"0x7a7b7c7d",
			"0x7e7d7c7b",
			"0x7b7c7d7e",
			"0x7f7e7d7c",
			"0x7c7d7e7f",
			"0x807f7e7d",
			"0x7d7e7f80",
			"0x81807f7e",
			"0x7e7f8081",
			"0x8281807f",
			"0x7f808182",
			"0x83828180",
			"0x80818283",
			"0x84838281",
			"0x81828384",
			"0x85848382",
			"0x82838485",
			"0x86858483",
			"0x83848586",
			"0x87868584",
			"0x84858687",
			"0x88878685",
			"0x85868788",
			"0x89888786",
			"0x86878889",
			"0x8a898887",
			"0x8788898a",
			"0x8b8a8988",
			"0x88898a8b",
			"0x8c8b8a89",
			"0x898a8b8c",
			"0x8d8c8b8a",
			"0x8a8b8c8d",
			"0x8e8d8c8b",
			"0x8b8c8d8e",
			"0x8f8e8d8c",
			"0x8c8d8e8f",
			"0x908f8e8d",
			"0x8d8e8f90",
			"0x91908f8e",
			"0x8e8f9091",
			"0x9291908f",
			"0x8f909192",
			"0x93929190",
			"0x90919293",
			"0x94939291",
			"0x91929394",
			"0x95949392",
			"0x92939495",
			"0x96959493",
			"0x93949596",
			"0x97969594",
			"0x94959697",
			"0x98979695",
			"0x95969798",
			"0x99989796",
			"0x96979899",
			"0x9a999897",
			"0x9798999a",
			"0x9b9a9998",
			"0x98999a9b",
			"0x9c9b9a99",
			"0x999a9b9c",
			"0x9d9c9b9a",
			"0x9a9b9c9d",
			"0x9e9d9c9b",
			"0x9b9c9d9e",
			"0x9f9e9d9c",
			"0x9c9d9e9f",
			"0xa09f9e9d",
			"0x9d9e9fa0",
			"0xa1a09f9e",
			"0x9e9fa0a1",
			"0xa2a1a09f",
			"0x9fa0a1a2",
			"0xa3a2a1a0",
			"0xa0a1a2a3",
			"0xa4a3a2a1",
			"0xa1a2a3a4",
			"0xa5a4a3a2",
			"0xa2a3a4a5",
			"0xa6a5a4a3",
			"0xa3a4a5a6",
			"0xa7a6a5a4",
			"0xa4a5a6a7",
			"0xa8a7a6a5",
			"0xa5a6a7a8",
			"0xa9a8a7a6",
			"0xa6a7a8a9",
			"0xaaa9a8a7",
			"0xa7a8a9aa",
			"0xabaaa9a8",
			"0xa8a9aaab",
			"0xacabaaa9",
			"0xa9aaabac",
			"0xadacabaa",
			"0xaaabacad",
			"0xaeadacab",
			"0xabacadae",
			"0xafaeadac",
			"0xacadaeaf",
			"0xb0afaead",
			"0xadaeafb0",
			"0xb1b0afae",
			"0xaeafb0b1",
			"0xb2b1b0af",
			"0xafb0b1b2",
			"0xb3b2b1b0",
			"0xb0b1b2b3",
			"0xb4b3b2b1",
			"0xb1b2b3b4",
			"0xb5b4b3b2",
			"0xb2b3b4b5",
			"0xb6b5b4b3",
			"0xb3b4b5b6",
			"0xb7b6b5b4",
			"0xb4b5b6b7",
			"0xb8b7b6b5",
			"0xb5b6b7b8",
			"0xb9b8b7b6",
			"0xb6b7b8b9",
			"0xbab9b8b7",
			"0xb7b8b9ba",
			"0xbbbab9b8",
			"0xb8b9babb",
			"0xbcbbbab9",
			"0xb9babbbc",
			"0xbdbcbbba",
			"0xbabbbcbd",
			"0xbebdbcbb",
			"0xbbbcbdbe",
			"0xbfbebdbc",
			"0xbcbdbebf",
			"0xc0bfbebd",
			"0xbdbebfc0",
			"0xc1c0bfbe",
			"0xbebfc0c1",
			"0xc2c1c0bf",
			"0xbfc0c1c2",
			"0xc3c2c1c0",
			"0xc0c1c2c3",
			"0xc4c3c2c1",
			"0xc1c2c3c4",
			"0xc5c4c3c2",
			"0xc2c3c4c5",
			"0xc6c5c4c3",
			"0xc3c4c5c6",
			"0xc7c6c5c4",
			"0xc4c5c6c7",
			"0xc8c7c6c5",
			"0xc5c6c7c8",
			"0xc9c8c7c6",
			"0xc6c7c8c9",
			"0xcac9c8c7",
			"0xc7c8c9ca",
			"0xcbcac9c8",
			"0xc8c9cacb",
			"0xcccbcac9",
			"0xc9cacbcc",
			"0xcdcccbca",
			"0xcacbcccd",
			"0xcecdcccb",
			"0xcbcccdce",
			"0xcfcecdcc",
			"0xcccdcecf",
			"0xd0cfcecd",
			"0xcdcecfd0",
			"0xd1d0cfce",
			"0xcecfd0d1",
			"0xd2d1d0cf",
			"0xcfd0d1d2",
			"0xd3d2d1d0",
			"0xd0d1d2d3",
			"0xd4d3d2d1",
			"0xd1d2d3d4",
			"0xd5d4d3d2",
			"0xd2d3d4d5",
			"0xd6d5d4d3",
			"0xd3d4d5d6",
			"0xd7d6d5d4",
			"0xd4d5d6d7",
			"0xd8d7d6d5",
			"0xd5d6d7d8",
			"0xd9d8d7d6",
			"0xd6d7d8d9",
			"0xdad9d8d7",
			"0xd7d8d9da",
			"0xdbdad9d8",
			"0xd8d9dadb",
			"0xdcdbdad9",
			"0xd9dadbdc",
			"0xdddcdbda",
			"0xdadbdcdd",
			"0xdedddcdb",
			"0xdbdcddde",
			"0xdfdedddc",
			"0xdcdddedf",
			"0xe0dfdedd",
			"0xdddedfe0",
			"0xe1e0dfde",
			"0xdedfe0e1",
			"0xe2e1e0df",
			"0xdfe0e1e2",
			"0xe3e2e1e0",
			"0xe0e1e2e3",
			"0xe4e3e2e1",
			"0xe1e2e3e4",
			"0xe5e4e3e2",
			"0xe2e3e4e5",
			"0xe6e5e4e3",
			"0xe3e4e5e6",
			"0xe7e6e5e4",
			"0xe4e5e6e7",
			"0xe8e7e6e5",
			"0xe5e6e7e8",
			"0xe9e8e7e6",
			"0xe6e7e8e9",
			"0xeae9e8e7",
			"0xe7e8e9ea",
			"0xebeae9e8",
			"0xe8e9eaeb",
			"0xecebeae9",
			"0xe9eaebec",
			"0xedecebea",
			"0xeaebeced",
			"0xeeedeceb",
			"0xebecedee",
			"0xefeeedec",
			"0xecedeeef",
			"0xf0efeeed",
			"0xedeeeff0",
			"0xf1f0efee",
			"0xeeeff0f1",
			"0xf2f1f0ef",
			"0xeff0f1f2",
			"0xf3f2f1f0",
			"0xf0f1f2f3",
			"0xf4f3f2f1",
			"0xf1f2f3f4",
			"0xf5f4f3f2",
			"0xf2f3f4f5",
			"0xf6f5f4f3",
			"0xf3f4f5f6",
			"0xf7f6f5f4",
			"0xf4f5f6f7",
			"0xf8f7f6f5",
			"0xf5f6f7f8",
			"0xf9f8f7f6",
			"0xf6f7f8f9",
			"0xfaf9f8f7",
			"0xf7f8f9fa",
			"0xfbfaf9f8",
			"0xf8f9fafb",
			"0xfcfbfaf9",
			"0xf9fafbfc",
			"0xfdfcfbfa",
			"0xfafbfcfd",
			"0xfefdfcfb",
			"0xfbfcfdfe",
			"0xfffefdfc",
			"0xfcfdfeff"
	};
	
	/**
	 * Sets the up before class.
	 *
	 * @throws Exception the exception
	 */
	@BeforeAll
	static void setUpBeforeClass() throws Exception {
	}

	/**
	 * Tear down after class.
	 *
	 * @throws Exception the exception
	 */
	@AfterAll
	static void tearDownAfterClass() throws Exception {
	}

	/**
	 * Sets the up.
	 *
	 * @throws Exception the exception
	 */
	@BeforeEach
	void setUp() throws Exception {
	}

	/**
	 * Tear down.
	 *
	 * @throws Exception the exception
	 */
	@AfterEach
	void tearDown() throws Exception {
	}


	/**
	 * Test basic byte to binary string conversion.
	 */
	@Test
	@Order(1)
	void test_ByteToBinaryString() {
		System.out.println("\nByteToBinaryString Test:");

		System.out.print("   Testing all 256 binary string conversions: ");
		int ptr = 0;
		for (int i = 0; i < 256; i++) {
			int data = -128+i;
			assertEquals(binToByteData[ptr],"0b"+IntegerConvert.byteToBinaryString((byte) data));
			ptr++;
		}
		System.out.println("PASSED");
	}
	
		
	/**
	 * Test basic bin str to int.
	 */
	@Test
	@Order(2)
	void test_IntToBinaryString() {
		System.out.println("\nIntToBinaryString Test:");
		System.out.print("   Testing conversion of Max, -1, min binary strings: ");
		assertEquals("0b01111111111111111111111111111111","0b"+IntegerConvert.intToBinaryString(2147483647));
		assertEquals("0b11111111111111111111111111111111","0b"+IntegerConvert.intToBinaryString(-1));
		assertEquals("0b10000000000000000000000000000000","0b"+IntegerConvert.intToBinaryString(-2147483648));
		System.out.println("PASSED");
		System.out.print("   Volume conversion to binary string: ");
		int ptr = 0;
		for (int i = 0; i < 253; i++) {
			int data = ((i+3)<<24)+((i+2)<<16)+((i+1)<<8)+i;
			assertEquals(binToIntData[ptr],"0b"+IntegerConvert.intToBinaryString(data));
			ptr++;
			data = ((i)<<24)+((i+1)<<16)+((i+2)<<8)+i+3;
			assertEquals(binToIntData[ptr],"0b"+IntegerConvert.intToBinaryString(data));
			ptr++;
		}
		System.out.println("PASSED");
	}
	
	/**
	 * Test basic hex str to byte.
	 */
	@Test
	@Order(3)
	void test_ByteToHexString() {
		System.out.println("\nByte to Hex String Test: ");
		System.out.print("   Testing all 256 possible hex string values for a byte: ");
		int ptr = 0;
		for (int i = 0; i < 256; i++) {
			int data = -128+i;
			assertEquals(hexToByteData[ptr],"0x"+IntegerConvert.byteToHexString((byte) data));
			ptr++;
		}
		System.out.println("PASSED");
	}
	
	/**
	 * Test basic hex str to int.
	 */
	@Test
	@Order(4)
	void test_IntToHexString() {
		System.out.println("\nInt to Hex String Test:");
		System.out.print("   Testing conversion of Max, -1, min binary strings: ");
		assertEquals("0x7fffffff","0x"+IntegerConvert.intToHexString(2147483647));
		assertEquals("0xffffffff","0x"+IntegerConvert.intToHexString(-1));
		assertEquals("0x80000000","0x"+IntegerConvert.intToHexString(-2147483648));
		System.out.println("PASSED");
		System.out.print("   Volume conversion to hex string: ");
		int ptr = 0;
		for (int i = 0; i < 253; i++) {
			int data = ((i+3)<<24)+((i+2)<<16)+((i+1)<<8)+i;
			assertEquals(hexToIntData[ptr],"0x"+IntegerConvert.intToHexString(data));
			ptr++;
			data = ((i)<<24)+((i+1)<<16)+((i+2)<<8)+i+3;
			assertEquals(hexToIntData[ptr],"0x"+IntegerConvert.intToHexString(data));
			ptr++;
		}
		System.out.println("PASSED");
	}
		
}
